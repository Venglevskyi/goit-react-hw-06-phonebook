{"version":3,"sources":["Components/Toggler/toggler.module.css","Components/Filter/filter.module.css","base.module.css","Components/ContactListItem/contactList.module.css","Components/Layout/layout.module.css","redux/contacts/contactsActions.js","redux/contacts/contactsReducer.js","redux/store.js","context/ThemeContext.js","hoc/withThemeContext.js","Components/Layout/Layout.js","Components/Toggler/Toggler.js","Components/ContactForm/ContactForm.js","Components/ContactListItem/ContactListItem.js","Components/Filter/Filter.js","Components/ContactList/ContactList.js","App.js","index.js","Components/ContactForm/contactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","newContact","id","uuidv4","removeContact","formFilter","items","createReducer","state","action","filter","combineReducers","store","configureStore","reducer","contacts","contactsReducer","themeConfig","light","fontColor","bodybg","dark","Context","React","createContext","ThemeContext","toggleTheme","setState","theme","config","Provider","value","this","props","children","Component","Consumer","withThemeContext","WrappedComponent","ctx","className","styles","Layout","style","background","color","themeSelector","switch","type","checked","onChange","target","slider","ContactForm","handleChange","handleSubmit","e","preventDefault","findContact","find","contact","alert","onAddContact","Form","onSubmit","FormLabel","FormInput","FormButton","mapDispatchToProps","connect","ownProps","item","dispatch","contactsListItem","deleteButton","onClick","normalizedFilter","toLowerCase","includes","filterForm","length","map","key","App","title","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.2f982e42.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"themeSelector\":\"toggler_themeSelector__1Jbkz\",\"switch\":\"toggler_switch__uqRbk\",\"slider\":\"toggler_slider__2ljAa\",\"round\":\"toggler_round__2aqCz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterForm\":\"filter_filterForm__33C3W\",\"FormLabel\":\"filter_FormLabel__aMNMZ\",\"FormInput\":\"filter_FormInput__EA6Xg\",\"contactsListItem\":\"filter_contactsListItem__3YP2k\",\"deleteButton\":\"filter_deleteButton__1ASng\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"base_title__1-bMC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsListItem\":\"contactList_contactsListItem__2DVFu\",\"deleteButton\":\"contactList_deleteButton__1uOZs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"layout_Layout__3Y_dA\"};","import { createAction } from \"@reduxjs/toolkit\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst addContact = createAction(\"contact/add\", (name, number) => ({\r\n  payload: { newContact: { id: uuidv4(), name, number } }\r\n}));\r\nconst removeContact = createAction(\"contact/remove\");\r\nconst formFilter = createAction(\"contact/formFilter\");\r\n\r\nexport { addContact, formFilter, removeContact };\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport { addContact, removeContact, formFilter } from \"./contactsActions\";\r\n\r\nconst onAddContact = (state, action) => {\r\n  return [...state, action.payload.newContact];\r\n};\r\n\r\nconst onRemoveContact = (state, action) =>\r\n  state.filter(({ id }) => id !== action.payload);\r\n\r\nconst items = createReducer([], {\r\n  [addContact]: onAddContact,\r\n  [removeContact]: onRemoveContact\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [formFilter]: (state, action) => action.payload\r\n});\r\n\r\nexport default combineReducers({ items, filter });\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport contactsReducer from \"./contacts/contactsReducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: { contacts: contactsReducer }\r\n});\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\n\r\nconst themeConfig = {\r\n  light: {\r\n    fontColor: \"black\",\r\n    bodybg: \"#fff\"\r\n  },\r\n  dark: {\r\n    fontColor: \"white\",\r\n    bodybg: \"#333333\"\r\n  }\r\n};\r\n\r\nconst Context = React.createContext();\r\n\r\nexport default class ThemeContext extends Component {\r\n  static Consumer = Context.Consumer;\r\n\r\n  toggleTheme = () => {\r\n    this.setState(state => ({\r\n      theme: state.theme === \"dark\" ? \"light\" : \"dark\"\r\n    }));\r\n  };\r\n\r\n  state = {\r\n    theme: \"light\",\r\n    toggleTheme: this.toggleTheme,\r\n    config: themeConfig\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ThemeContext from \"../context/ThemeContext\";\r\n\r\nconst withThemeContext = WrappedComponent => {\r\n  return function withThemeContext(props) {\r\n    return (\r\n      <ThemeContext.Consumer>\r\n        {ctx => <WrappedComponent {...props} theme={ctx} />}\r\n      </ThemeContext.Consumer>\r\n    );\r\n  };\r\n};\r\n\r\nwithThemeContext.propTypes = {\r\n  value: PropTypes.shape({\r\n    theme: PropTypes.string.isRequired,\r\n    toggleTheme: PropTypes.func.isRequired,\r\n    config: PropTypes.exact({\r\n      light: PropTypes.exact({\r\n        bodybg: PropTypes.string.isRequired,\r\n        fontColor: PropTypes.string.isRequired\r\n      }),\r\n      dark: PropTypes.exact({\r\n        bodybg: PropTypes.string.isRequired,\r\n        fontColor: PropTypes.string.isRequired\r\n      })\r\n    })\r\n  })\r\n};\r\n\r\nexport default withThemeContext;\r\n","import React from \"react\";\r\nimport withThemeContext from \"../../hoc/withThemeContext\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./layout.module.css\";\r\n\r\nconst Layout = ({ children, theme: { theme, config } }) => (\r\n  <div\r\n    className={styles.Layout}\r\n    style={{\r\n      background: config[theme].bodybg,\r\n      color: config[theme].fontColor\r\n    }}\r\n  >\r\n    {children}\r\n  </div>\r\n);\r\n\r\nLayout.propTypes = {\r\n  theme: PropTypes.shape({\r\n    theme: PropTypes.string.isRequired,\r\n    config: PropTypes.exact({\r\n      light: PropTypes.exact({\r\n        bodybg: PropTypes.string.isRequired,\r\n        fontColor: PropTypes.string.isRequired\r\n      }),\r\n      dark: PropTypes.exact({\r\n        bodybg: PropTypes.string.isRequired,\r\n        fontColor: PropTypes.string.isRequired\r\n      })\r\n    })\r\n  })\r\n};\r\n\r\nexport default withThemeContext(Layout);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport withThemeContext from \"../../hoc/withThemeContext\";\r\n\r\nimport styles from \"./toggler.module.css\";\r\n\r\nconst Toggler = ({ theme: { theme, toggleTheme } }) => (\r\n  <div className={styles.themeSelector}>\r\n    <label className={styles.switch}>\r\n      <input\r\n        type=\"checkbox\"\r\n        checked={theme === \"dark\"}\r\n        onChange={({ target }) => toggleTheme(target.value)}\r\n      />\r\n      <span className={styles.slider}></span>\r\n    </label>\r\n  </div>\r\n);\r\n\r\nToggler.propTypes = {\r\n  theme: PropTypes.shape({\r\n    theme: PropTypes.string.isRequired,\r\n    toggleTheme: PropTypes.func.isRequired\r\n  })\r\n};\r\n\r\nexport default withThemeContext(Toggler);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addContact } from \"../../redux/contacts/contactsActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./contactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\"\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const findContact = this.props.contacts.find(\r\n      contact => contact.name === name\r\n    );\r\n    if (findContact) {\r\n      alert(`${findContact.name} is already consist`);\r\n      return;\r\n    }\r\n    this.props.onAddContact(name, number);\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={styles.Form} onSubmit={this.handleSubmit}>\r\n        <label className={styles.FormLabel}>\r\n          Name\r\n          <input\r\n            className={styles.FormInput}\r\n            type=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n            name=\"name\"\r\n          />\r\n        </label>\r\n        <label className={styles.FormLabel}>\r\n          Number\r\n          <input\r\n            className={styles.FormInput}\r\n            type=\"name\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n            name=\"number\"\r\n          />\r\n        </label>\r\n        <button className={styles.FormButton} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: state.contacts.items\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onAddContact: addContact\r\n};\r\n\r\nContactForm.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired\r\n    })\r\n  ),\r\n  onAddContact: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { removeContact } from \"../../redux/contacts/contactsActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./contactList.module.css\";\r\n\r\nconst ContactListItem = ({ name, number, removeContact }) => (\r\n  <li className={styles.contactsListItem}>\r\n    <p>\r\n      {name}: {number}\r\n    </p>\r\n    <button\r\n      type=\"button\"\r\n      className={styles.deleteButton}\r\n      onClick={removeContact}\r\n    >\r\n      Delete\r\n    </button>\r\n  </li>\r\n);\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const item = state.contacts.items.find(item => item.id === ownProps.id);\r\n\r\n  return {\r\n    ...item\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  removeContact: () => dispatch(removeContact(ownProps.id))\r\n});\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  removeContact: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactListItem);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { formFilter } from \"../../redux/contacts/contactsActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\r\n\r\nimport styles from \"./filter.module.css\";\r\n\r\nconst Filter = ({ value, onChange, contacts }) => (\r\n  <div className={styles.filterForm}>\r\n    <label className={styles.FormLabel}>\r\n      Find contacts by name\r\n      <input\r\n        className={styles.FormInput}\r\n        type=\"name\"\r\n        value={value}\r\n        onChange={e => onChange(e.target.value)}\r\n      />\r\n    </label>\r\n    <ul>\r\n      {contacts.length > 1 &&\r\n        contacts.map(({ id }) => <ContactListItem key={id} id={id} />)}\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = state => {\r\n  const { items, filter } = state.contacts;\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  const getVisibleContact = items.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n\r\n  return {\r\n    contacts: getVisibleContact,\r\n    value: state.contacts.filter\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onChange: formFilter\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired\r\n    })\r\n  )\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\r\n\r\nconst ContactList = ({ contacts }) => (\r\n  <ul>\r\n    {contacts.map(({ id }) => (\r\n      <ContactListItem key={id} id={id} />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nconst mapStateToProps = state => {\r\n  const { items, filter } = state.contacts;\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  const getVisibleContact = items.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n\r\n  return {\r\n    contacts: getVisibleContact\r\n  };\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired\r\n    })\r\n  )\r\n};\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n","import React from \"react\";\r\n\r\nimport styles from \"./base.module.css\";\r\n\r\nimport Layout from \"./Components/Layout/Layout\";\r\nimport Toggler from \"./Components/Toggler/Toggler\";\r\nimport ContactForm from \"./Components/ContactForm/ContactForm\";\r\nimport Filter from \"./Components/Filter/Filter\";\r\nimport ContactList from \"./Components/ContactList/ContactList\";\r\nimport ThemeContext from \"./context/ThemeContext\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <ThemeContext>\r\n      <Layout>\r\n        <Toggler />\r\n        <h1 className={styles.title}>Phonebook</h1>\r\n        <ContactForm />\r\n        <h2 className={styles.title}>Contacts</h2>\r\n        <Filter />\r\n        <ContactList />\r\n      </Layout>\r\n    </ThemeContext>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport store from \"./redux/store\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"contactForm_Form__C06z4\",\"FormLabel\":\"contactForm_FormLabel__2vjpd\",\"FormInput\":\"contactForm_FormInput__16XFz\",\"FormButton\":\"contactForm_FormButton__VIhgD\"};"],"sourceRoot":""}