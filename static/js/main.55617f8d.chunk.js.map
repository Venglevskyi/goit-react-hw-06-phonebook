{"version":3,"sources":["base.module.css","Components/ContactListItem/contactList.module.css","Components/Layout/layout.module.css","Components/ContactForm/contactForm.module.css","redux/contacts/contactsActions.js","redux/contacts/contactsReducer.js","redux/store.js","Components/Layout/Layout.js","Components/ContactForm/ContactForm.js","Components/ContactListItem/ContactListItem.js","Components/Filter/Filter.js","Components/ContactList/ContactList.js","App.js","index.js","Components/Filter/filter.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","newContact","id","uuid","removeContact","formFilter","items","createReducer","contactsActions","state","action","filter","combineReducers","store","configureStore","reducer","contacts","contactsReducer","Layout","children","className","styles","ContactForm","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onAddContact","this","Form","onSubmit","FormLabel","FormInput","type","onChange","FormButton","Component","mapDispatchToProps","connect","ContactListItem","contactsListItem","deleteButton","onClick","onRemoveContact","normalizedFilter","toLowerCase","contact","includes","visibleSearchContacts","filterForm","length","map","key","console","log","getVisibleContact","App","title","ReactDOM","render","document","querySelector"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,MAAQ,sB,mBCA1BD,EAAOC,QAAU,CAAC,iBAAmB,sCAAsC,aAAe,oC,mBCA1FD,EAAOC,QAAU,CAAC,OAAS,yB,sDCA3BD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,UAAY,+BAA+B,UAAY,+BAA+B,WAAa,kC,kICEhJC,EAAaC,YAAa,eAAe,SAACC,EAAMC,GAAP,MAAmB,CAChEC,QAAS,CAAEC,WAAY,CAAEC,GAAIC,MAAQL,OAAMC,eAEvCK,EAAgBP,YAAa,kBAmBpB,GAAED,aAAYS,WAlBVR,YAAa,sBAkBSO,iBCfnCE,EAAQC,YAAc,IAAD,mBACxBC,EAAgBZ,YAPE,SAACa,EAAOC,GAC3B,MAAM,GAAN,mBAAWD,GAAX,CAAkBC,EAAOV,QAAQC,gBAKR,cAExBO,EAAgBJ,eALK,SAACK,EAAOC,GAAR,OACtBD,EAAME,QAAO,qBAAGT,KAAgBQ,EAAOV,cAEd,IAKrBW,EAASJ,YAAc,IAAD,eACzBC,EAAgBH,YAAa,SAACI,EAAOC,GAAR,OAAmBA,EAAOV,YA0B3CY,4BAAgB,CAAEN,QAAOK,WCnCzBE,EAJDC,YAAe,CAC3BC,QAAS,CAAEC,SAAUC,K,kCCKRC,EAJA,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACb,yBAAKC,UAAWC,IAAOH,QAASC,I,gDCC5BG,E,4MACJb,MAAQ,CACNX,KAAM,GACNC,OAAQ,I,EAGVwB,aAAe,YAAiB,IAAdC,EAAa,EAAbA,OACR1B,EAAgB0B,EAAhB1B,KAAM2B,EAAUD,EAAVC,MACd,EAAKC,SAAL,eAAiB5B,EAAO2B,K,EAG1BE,aAAe,SAAAC,GACbA,EAAEC,iBADgB,MAEO,EAAKpB,MAAtBX,EAFU,EAEVA,KAAMC,EAFI,EAEJA,OACd,EAAK+B,MAAMC,aAAajC,EAAMC,GAC9B,EAAK2B,SAAS,CAAE5B,KAAM,GAAIC,OAAQ,M,uDAG1B,IAAD,EACkBiC,KAAKvB,MAAtBX,EADD,EACCA,KAAMC,EADP,EACOA,OACd,OACE,0BAAMqB,UAAWC,IAAOY,KAAMC,SAAUF,KAAKL,cAC3C,2BAAOP,UAAWC,IAAOc,WAAzB,OAEE,2BACEf,UAAWC,IAAOe,UAClBC,KAAK,OACLZ,MAAO3B,EACPwC,SAAUN,KAAKT,aACfzB,KAAK,UAGT,2BAAOsB,UAAWC,IAAOc,WAAzB,SAEE,2BACEf,UAAWC,IAAOe,UAClBC,KAAK,OACLZ,MAAO1B,EACPuC,SAAUN,KAAKT,aACfzB,KAAK,YAGT,4BAAQsB,UAAWC,IAAOkB,WAAYF,KAAK,UAA3C,oB,GA1CkBG,aAkDpBC,EAAqB,CACzBV,aAAcvB,EAAgBZ,YAGjB8C,cAAQ,KAAMD,EAAdC,CAAkCpB,G,iBCnClCqB,EArBS,SAAC,GAAD,IAAG7C,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAQK,EAAjB,EAAiBA,cAAjB,OACtB,wBAAIgB,UAAWC,IAAOuB,kBACpB,2BACG9C,EADH,KACWC,GAEX,4BACEsC,KAAK,SACLjB,UAAWC,IAAOwB,aAClBC,QAAS1C,GAHX,Y,gBC4CEqC,EAAqB,CACzBH,SAAU9B,EAAgBH,WAC1B0C,gBAAiBvC,EAAgBJ,eAuBpBsC,eAvCS,SAAAjC,GAAU,IAAD,EACLA,EAAMO,SAAxBV,EADuB,EACvBA,MACF0C,EAFyB,EAChBrC,OACiBsC,cAMhC,MAAO,CACLjC,SALwBV,EAAMK,QAAO,SAAAuC,GAAO,OAC5CA,EAAQpD,KAAKmD,cAAcE,SAASH,MAKpCvB,MAAOhB,EAAMO,SAASL,UA6Bc8B,EAAzBC,EAtEA,SAAC,GAAD,IACbjB,EADa,EACbA,MACAa,EAFa,EAEbA,SACAc,EAHa,EAGbA,sBACApC,EAJa,EAIbA,SACA+B,EALa,EAKbA,gBALa,OAOb,yBAAK3B,UAAWC,IAAOgC,YACrB,2BAAOjC,UAAWC,IAAOc,WAAzB,wBAEE,2BACEf,UAAWC,IAAOe,UAClBC,KAAK,OACLZ,MAAOA,EACPa,SAAU,SAAAV,GAAC,OAAIU,EAASV,EAAEJ,OAAOC,WAGrC,4BACGT,EAASsC,OAAS,GACjBF,EAAsBG,KAAI,gBAAGrD,EAAH,EAAGA,GAAIJ,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACxB,kBAAC,EAAD,CACEyD,IAAKtD,EACLJ,KAAMA,EACNC,OAAQA,EACRK,cAAe,kBAAM2C,EAAgB7C,cCc3CuC,EAAqB,CACzBM,gBAAiBvC,EAAgBJ,eAGpBsC,eApBS,SAAAjC,GACtBgD,QAAQC,IAAIjD,GADmB,MAELA,EAAMO,SAAxBV,EAFuB,EAEvBA,MACF0C,EAHyB,EAEhBrC,OACiBsC,cAE1BU,EAAoBrD,EAAMK,QAAO,SAAAuC,GAAO,OAC5CA,EAAQpD,KAAKmD,cAAcE,SAASH,MAKtC,OAFAS,QAAQC,IAAIC,GAEL,CACL3C,SAAU2C,KAQ0BlB,EAAzBC,EA5CK,SAAC,GAAD,IAAG1B,EAAH,EAAGA,SAAU+B,EAAb,EAAaA,gBAAb,OAClB,4BACG/B,EAASuC,KAAI,gBAAGrD,EAAH,EAAGA,GAAIJ,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,kBAAC,EAAD,CACEyD,IAAKtD,EACLJ,KAAMA,EACNC,OAAQA,EACRK,cAAe,kBAAM2C,EAAgB7C,aCQ9B0D,EAbH,WACV,OACE,kBAAC,EAAD,KAEE,wBAAIxC,UAAWC,IAAOwC,OAAtB,aACA,kBAAC,EAAD,MACA,wBAAIzC,UAAWC,IAAOwC,OAAtB,YACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCVNC,IAASC,OACP,kBAAC,IAAD,CAAUlD,MAAOA,GACf,kBAAC,EAAD,OAEFmD,SAASC,cAAc,W,kBCVzBvE,EAAOC,QAAU,CAAC,WAAa,2BAA2B,UAAY,0BAA0B,UAAY,0BAA0B,iBAAmB,iCAAiC,aAAe,gC","file":"static/js/main.55617f8d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"base_title__1-bMC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsListItem\":\"contactList_contactsListItem__2DVFu\",\"deleteButton\":\"contactList_deleteButton__1uOZs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"layout_Layout__3Y_dA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"contactForm_Form__C06z4\",\"FormLabel\":\"contactForm_FormLabel__2vjpd\",\"FormInput\":\"contactForm_FormInput__16XFz\",\"FormButton\":\"contactForm_FormButton__VIhgD\"};","import { createAction } from \"@reduxjs/toolkit\";\r\nimport uuid from \"uuid/v4\";\r\n\r\nconst addContact = createAction(\"contact/add\", (name, number) => ({\r\n  payload: { newContact: { id: uuid(), name, number } }\r\n}));\r\nconst removeContact = createAction(\"contact/remove\");\r\nconst formFilter = createAction(\"contact/formFilter\");\r\n\r\n// const addContact = (name, number) => ({\r\n//   type: \"contact/add\",\r\n//   payload: {\r\n//     newContact: {\r\n//       id: uuid(),\r\n//       name,\r\n//       number\r\n//     }\r\n//   }\r\n// });\r\n\r\n// const formFilter = filter => ({\r\n//   type: \"contact/formFilter\",\r\n//   payload: { filter }\r\n// });\r\n\r\nexport default { addContact, formFilter, removeContact };\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport contactsActions from \"./contactsActions\";\r\n\r\nconst onAddContact = (state, action) => {\r\n  return [...state, action.payload.newContact];\r\n};\r\nconst onRemoveContact = (state, action) =>\r\n  state.filter(({ id }) => id !== action.payload);\r\n\r\nconst items = createReducer([], {\r\n  [contactsActions.addContact]: onAddContact,\r\n  [contactsActions.removeContact]: onRemoveContact\r\n});\r\n\r\nconst filter = createReducer(\" \", {\r\n  [contactsActions.formFilter]: (state, action) => action.payload\r\n});\r\n\r\n// const items = (state = [], { type, payload }) => {\r\n//   switch (type) {\r\n//     case contactsActions.addContact.type:\r\n//       return [...state, payload.newContact];\r\n\r\n//     case contactsActions.removeContact.type:\r\n//       return state.filter(({ id }) => id !== payload);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const filter = (state = \"\", { type, payload }) => {\r\n//   switch (type) {\r\n//     case contactsActions.formFilter.type:\r\n//       return payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nexport default combineReducers({ items, filter });\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport contactsReducer from \"./contacts/contactsReducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: { contacts: contactsReducer }\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./layout.module.css\";\r\n\r\nconst Layout = ({ children }) => (\r\n  <div className={styles.Layout}>{children}</div>\r\n);\r\n\r\nexport default Layout;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsActions from \"../../redux/contacts/contactsActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./contactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\"\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    this.props.onAddContact(name, number);\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={styles.Form} onSubmit={this.handleSubmit}>\r\n        <label className={styles.FormLabel}>\r\n          Name\r\n          <input\r\n            className={styles.FormInput}\r\n            type=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n            name=\"name\"\r\n          />\r\n        </label>\r\n        <label className={styles.FormLabel}>\r\n          Number\r\n          <input\r\n            className={styles.FormInput}\r\n            type=\"name\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n            name=\"number\"\r\n          />\r\n        </label>\r\n        <button className={styles.FormButton} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onAddContact: contactsActions.addContact\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n\r\nContactForm.propTypes = {\r\n  onAddContact: PropTypes.func.isRequired\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./contactList.module.css\";\r\n\r\nconst ContactListItem = ({ name, number, removeContact }) => (\r\n  <li className={styles.contactsListItem}>\r\n    <p>\r\n      {name}: {number}\r\n    </p>\r\n    <button\r\n      type=\"button\"\r\n      className={styles.deleteButton}\r\n      onClick={removeContact}\r\n    >\r\n      Delete\r\n    </button>\r\n  </li>\r\n);\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  removeContact: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsActions from \"../../redux/contacts/contactsActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\r\n\r\nimport styles from \"./filter.module.css\";\r\n\r\nconst Filter = ({\r\n  value,\r\n  onChange,\r\n  visibleSearchContacts,\r\n  contacts,\r\n  onRemoveContact\r\n}) => (\r\n  <div className={styles.filterForm}>\r\n    <label className={styles.FormLabel}>\r\n      Find contacts by name\r\n      <input\r\n        className={styles.FormInput}\r\n        type=\"name\"\r\n        value={value}\r\n        onChange={e => onChange(e.target.value)}\r\n      />\r\n    </label>\r\n    <ul>\r\n      {contacts.length > 2 &&\r\n        visibleSearchContacts.map(({ id, name, number }) => (\r\n          <ContactListItem\r\n            key={id}\r\n            name={name}\r\n            number={number}\r\n            removeContact={() => onRemoveContact(id)}\r\n          />\r\n        ))}\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = state => {\r\n  const { items, filter } = state.contacts;\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  const getVisibleContact = items.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n\r\n  return {\r\n    contacts: getVisibleContact,\r\n    value: state.contacts.filter,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onChange: contactsActions.formFilter,\r\n  onRemoveContact: contactsActions.removeContact\r\n}\r\n\r\n// Filter.propTypes = {\r\n//   value: PropTypes.string.isRequired,\r\n//   onChange: PropTypes.func.isRequired,\r\n//   visibleSearchContacts: PropTypes.arrayOf(\r\n//     PropTypes.exact({\r\n//       name: PropTypes.string.isRequired,\r\n//       number: PropTypes.string.isRequired,\r\n//       id: PropTypes.string.isRequired\r\n//     })\r\n//   ),\r\n//   contacts: PropTypes.arrayOf(\r\n//     PropTypes.exact({\r\n//       name: PropTypes.string.isRequired,\r\n//       number: PropTypes.string.isRequired,\r\n//       id: PropTypes.string.isRequired\r\n//     })\r\n//   ),\r\n//   onRemoveContact: PropTypes.func.isRequired\r\n// };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsActions from \"../../redux/contacts/contactsActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\r\n\r\nconst ContactList = ({ contacts, onRemoveContact }) => (\r\n  <ul>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <ContactListItem\r\n        key={id}\r\n        name={name}\r\n        number={number}\r\n        removeContact={() => onRemoveContact(id)}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired\r\n    })\r\n  ),\r\n  onRemoveContact: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  console.log(state)\r\n  const { items, filter } = state.contacts;\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  const getVisibleContact = items.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n\r\n  console.log(getVisibleContact)\r\n\r\n  return {\r\n    contacts: getVisibleContact\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onRemoveContact: contactsActions.removeContact\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from \"react\";\r\n\r\nimport styles from \"./base.module.css\";\r\n\r\nimport Layout from \"./Components/Layout/Layout\";\r\nimport ContactForm from \"./Components/ContactForm/ContactForm\";\r\nimport Filter from \"./Components/Filter/Filter\";\r\nimport ContactList from \"./Components/ContactList/ContactList\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Layout>\r\n      {/* <Toggler /> */}\r\n      <h1 className={styles.title}>Phonebook</h1>\r\n      <ContactForm />\r\n      <h2 className={styles.title}>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport store from \"./redux/store\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterForm\":\"filter_filterForm__33C3W\",\"FormLabel\":\"filter_FormLabel__aMNMZ\",\"FormInput\":\"filter_FormInput__EA6Xg\",\"contactsListItem\":\"filter_contactsListItem__3YP2k\",\"deleteButton\":\"filter_deleteButton__1ASng\"};"],"sourceRoot":""}